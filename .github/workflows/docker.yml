name: Docker CI/CD for VPN App

on:
  push:
    branches:
      - main

env:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  REGISTRY_URL: "http://registry.smartvest.ir"
  DEBUG_MODE: "true"

jobs:
  debug_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Test Domain Resolution
        run: |
          echo "=== Testing Domain Resolution ==="
          ping -c 4 registry.smartvest.ir || echo "Ping failed. Check DNS configuration."

      - name: Test Registry Access
        run: |
          echo "=== Testing Registry Access ==="
          curl -v $REGISTRY_URL/v2/ || echo "Curl failed. Check SSL configuration or registry availability."

      - name: Check Docker Certificates
        run: |
          echo "=== Checking Docker Certificates ==="
          if [ -d "/etc/docker/certs.d/registry.smartvest.ir" ]; then
            ls -la /etc/docker/certs.d/registry.smartvest.ir
          else
            echo "No custom certs directory found."
          fi

      - name: Test Docker Login
        env:
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          echo "=== Testing Docker Login ==="
          echo "$REGISTRY_PASSWORD" | docker login $REGISTRY_URL -u "$REGISTRY_USER" --password-stdin || echo "Docker login failed."

      - name: Show Environment Details
        run: |
          echo "=== Runner Debug Info ==="
          env | grep -i "docker"
          docker info || echo "Docker info failed."

  build_image:
    needs: debug_registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Registry
        env:
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          echo "$REGISTRY_PASSWORD" | docker login $REGISTRY_URL -u "$REGISTRY_USER" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t $REGISTRY_URL/vpn-app:${{ github.sha }} .
          docker push $REGISTRY_URL/vpn-app:${{ github.sha }}
